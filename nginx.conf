events {
    worker_connections 1024;
}

http {
    server {
        listen 8080;
        server_name localhost;

        root /usr/share/nginx/html;

        location /authenticate {
            if ($request_method = OPTIONS) {
                return 204;
            }

            internal;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;

            proxy_pass http://auth-service:3000/auth/authenticate;
        }

        location /login {
            proxy_pass http://auth-service:3000/auth/login;
        }

        location /register {
            proxy_pass http://auth-service:3000/auth/register;
        }

        location /public {
            proxy_pass http://public-service:3000/public;
        }

        location /private/ {
            auth_request /authenticate;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_header $upstream_http_authorization;

            proxy_set_header Authorization $auth_header;

            proxy_pass http://private-service:3000/private;
        }

        location /food/ {
            # Auth layer
            auth_request /authenticate;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_header $upstream_http_authorization;
            proxy_set_header Authorization $auth_header;

            # Proxy vers order-service
            proxy_pass http://order-service:3000/;

            # Headers utiles
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}